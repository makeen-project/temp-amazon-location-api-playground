{
	"Places": [
		{
			"id": "reverse-geocode",
			"type": "reverseGeocode",
			"tags": ["Places", "ReverseGeocode"],
			"submitButtonText": "ReverseGeocode",
			"imageSource": "images/ReverseGeocode.png",
			"title": "ReverseGeocode API Playground",
			"description": "The Reverse Geocode API converts latitude/Longitude into human-readable addresses. Use [[QueryPosition]] with latitude/longitude. Optional parameters include [[BiasPosition]], [[Filter]], and [[MaxResults]]. The response contains [[ResultItems]] with [[Address]], [[Position]], and Optional [[TimeZone]] data. Use [[AdditionalFeatures]] to request extra information like time zones.",
			"shouldRenderMap": true,
			"showLocalMarkerOnMapClick": "single",
			"missingFieldsMessage": "Click the map to reverse geocode",
			"requestParams": [],
			"buildSampleButton": {
				"text": "Build a sample ReverseGeocode Solution",
				"link": "https://docs.aws.amazon.com/location/latest/developerguide/reverse-geocoding.html"
			},
			"relatedResources": [
				{
					"text": "ReverseGeocode API documentation",
					"link": "https://docs.aws.amazon.com/location/latest/APIReference/API_geoplaces_ReverseGeocode.html"
				},
				{
					"text": "ReverseGeocode Developer Guide",
					"link": "https://docs.aws.amazon.com/location/latest/developerguide/reverse-geocode.html"
				},
				{
					"text": "Demo Application",
					"link": "https://demos.location.aws.dev/"
				}
			],
			"locationPopupConfig": {
				"showPlaceId": true,
				"showLatitude": true,
				"showLongitude": true
			},
			"formFields": [
				{
					"type": "lngLatInput",
					"name": "queryPosition",
					"label": "Query Position",
					"required": true,
					"placeholder": "Enter longitude and latitude coordinates"
				},
				{
					"type": "multiSelect",
					"name": "additionalFeatures",
					"label": "Additional Features",
					"maxSelected": 2,
					"required": false,
					"options": [
						{
							"label": "Access",
							"value": "Access"
						},
						{
							"label": "TimeZone",
							"value": "TimeZone"
						},
						{
							"label": "Intersections",
							"value": "Intersections"
						}
					]
				},
				{
					"type": "multiSelect",
					"name": "includePlaceTypes",
					"label": "Include Place Types",
					"required": false,
					"options": [
						{
							"label": "Locality",
							"value": "Locality"
						},
						{
							"label": "PostalCode",
							"value": "PostalCode"
						},
						{
							"label": "Intersection",
							"value": "Intersection"
						},

						{
							"label": "Street",
							"value": "Street"
						},
						{
							"label": "PointAddress",
							"value": "PointAddress"
						},
						{
							"label": "InterpolatedAddress",
							"value": "InterpolatedAddress"
						}
					]
				},
				{
					"type": "radio",
					"name": "intendedUse",
					"label": "Intended use",
					"required": false,
					"disabled": true,
					"defaultValue": "SingleUse",
					"options": [
						{
							"label": "Single use",
							"value": "SingleUse"
						},
						{
							"label": "Storage",
							"value": "Storage"
						}
					]
				},
				{
					"type": "text",
					"name": "apiKey",
					"label": "API Key",
					"required": false,
					"placeholder": "Enter your API key",
					"inputType": "password",
					"hiddenFromUI": true
				},
				{
					"type": "dropdown",
					"name": "language",
					"label": "Language",
					"required": false,
					"options": [
						{ "value": "", "label": "Select Language" },
						{ "value": "en", "label": "English" },
						{ "value": "ar", "label": "العربية" },
						{ "value": "as", "label": "অসমীয়া" },
						{ "value": "az", "label": "Azərbaycan dili" },
						{ "value": "be", "label": "беларуская" },
						{ "value": "bg", "label": "български" },
						{ "value": "bn", "label": "বাংলা" },
						{ "value": "bs", "label": "Bosanski" },
						{ "value": "ca", "label": "Català" },
						{ "value": "cs", "label": "Čeština" },
						{ "value": "cy", "label": "Cymraeg" },
						{ "value": "da", "label": "Dansk" },
						{ "value": "de", "label": "Deutsch" },
						{ "value": "el", "label": "Ελληνικά" },
						{ "value": "es", "label": "Español" },
						{ "value": "et", "label": "Eesti" },
						{ "value": "eu", "label": "Euskara" },
						{ "value": "fi", "label": "Suomi" },
						{ "value": "fo", "label": "Føroyskt" },
						{ "value": "fr", "label": "Français" },
						{ "value": "ga", "label": "Gaeilge" },
						{ "value": "gl", "label": "Galego" },
						{ "value": "gn", "label": "Avañe'ẽ" },
						{ "value": "gu", "label": "ગુજરાતી" },
						{ "value": "he", "label": "עברית" },
						{ "value": "hi", "label": "हिन्दी" },
						{ "value": "hr", "label": "Hrvatski" },
						{ "value": "hu", "label": "Magyar" },
						{ "value": "hy", "label": "Հայերեն" },
						{ "value": "id", "label": "Bahasa Indonesia" },
						{ "value": "is", "label": "Íslenska" },
						{ "value": "it", "label": "Italiano" },
						{ "value": "ja", "label": "日本語" },
						{ "value": "ka", "label": "ქართული" },
						{ "value": "kk", "label": "Қазақша" },
						{ "value": "km", "label": "ភាសាខ្មែរ" },
						{ "value": "kn", "label": "ಕನ್ನಡ" },
						{ "value": "ko", "label": "한국어" },
						{ "value": "ky", "label": "Кыргызча" },
						{ "value": "lt", "label": "Lietuvių" },
						{ "value": "lv", "label": "Latviešu" },
						{ "value": "mk", "label": "Македонски" },
						{ "value": "ml", "label": "മലയാളം" },
						{ "value": "mr", "label": "मराठी" },
						{ "value": "ms", "label": "Bahasa Melayu" },
						{ "value": "mt", "label": "Malti" },
						{ "value": "my", "label": "မြန်မာ" },
						{ "value": "nl", "label": "Nederlands" },
						{ "value": "no", "label": "Norsk" },
						{ "value": "or", "label": "ଓଡ଼ିଆ" },
						{ "value": "pa", "label": "ਪੰਜਾਬੀ" },
						{ "value": "pl", "label": "Polski" },
						{ "value": "pt", "label": "Português" },
						{ "value": "ro", "label": "Română" },
						{ "value": "ru", "label": "Русский" },
						{ "value": "sk", "label": "Slovenčina" },
						{ "value": "sl", "label": "Slovenščina" },
						{ "value": "sq", "label": "Shqip" },
						{ "value": "sr", "label": "Српски" },
						{ "value": "sv", "label": "Svenska" },
						{ "value": "ta", "label": "தமிழ்" },
						{ "value": "te", "label": "తెలుగు" },
						{ "value": "th", "label": "ไทย" },
						{ "value": "tr", "label": "Türkçe" },
						{ "value": "uk", "label": "Українська" },
						{ "value": "uz", "label": "Oʻzbekcha" },
						{ "value": "vi", "label": "Tiếng Việt" },
						{ "value": "zh", "label": "中文 (简体)" },
						{ "value": "zh-Hant", "label": "中文 (繁體)" }
					]
				},
				{
					"type": "sliderWithInput",
					"name": "maxResults",
					"label": "Max Results",
					"required": false,
					"min": 1,
					"max": 100,
					"step": 1,
					"defaultValue": 1,
					"disabled": true
				},
				{
					"type": "dropdown",
					"name": "politicalView",
					"label": "Political View",
					"required": false,
					"defaultValue": "",
					"options": [
						{
							"label": "No political value",
							"value": ""
						},

						{
							"value": "AR",
							"label": "Argentina",
							"desc": "argentina_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "EG",
							"label": "Egypt",
							"desc": "egypt_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "IN",
							"label": "India",
							"desc": "india_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "KE",
							"label": "Kenya",
							"desc": "kenya_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "MA",
							"label": "Morocco",
							"desc": "morocco_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "RU",
							"label": "Russia",
							"desc": "russia_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "SD",
							"label": "Sudan",
							"desc": "sudan_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "RS",
							"label": "Serbia",
							"desc": "serbia_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "SR",
							"label": "Suriname",
							"desc": "suriname_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "SY",
							"label": "Syria",
							"desc": "syria_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "TR",
							"label": "Turkey",
							"desc": "turkey_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "TZ",
							"label": "Tanzania",
							"desc": "tanzania_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "UY",
							"label": "Uruguay",
							"desc": "uruguay_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "VN",
							"label": "Vietnam",
							"desc": "vietnam_political_view_desc.text",
							"isSupportedByPlaces": true
						}
					]
				},
				{
					"type": "sliderWithInput",
					"name": "queryRadius",
					"label": "Query Radius",
					"min": 1,
					"disabled": true,
					"max": 100000,
					"step": 1,
					"required": false
				}
			],
			"formContent": {
				"type": "list",
				"items": [
					{
						"text": "Click a point on the map or enter coordinates then select [[Reverse Geocode]]"
					},
					{
						"text": "Results will be displayed and shown on the map"
					}
				]
			},
			"apiHandler": {
				"apiMethod": "getPlaceByCoordinates",
				"paramMapping": {
					"queryPosition": "QueryPosition",
					"additionalFeatures": "AdditionalFeatures",
					"includePlaceTypes": "Filter.IncludePlaceTypes",
					"intendedUse": "IntendedUse",
					"language": "Language",
					"maxResults": "MaxResults",
					"politicalView": "PoliticalView",
					"queryRadius": "QueryRadius"
				},
				"validationRules": [
					{
						"field": "queryPosition",
						"rule": "required",
						"message": "Query Position is required and must contain longitude and latitude"
					}
				]
			},
			"codeSnippets": {
				"JavaScript": "import { GeoPlacesClient, ReverseGeocodeCommand } from \"@aws-sdk/client-geo-places\";\n\n// Initialize the client\nconst client = new GeoPlacesClient({\n  region: \"us-east-1\" // Replace with your region\n});\n\n// Create the reverse geocode request\nconst params = {\n  QueryPosition: [{{queryPosition}}],MaxResults: {{maxResults}},\n  Key: 'your-api-key', \n  Language: \"{{language}}\",\n  PoliticalView: \"{{politicalView}}\"\n};\n\n// Make the request\nconst command = new ReverseGeocodeCommand(params);\nconst response = await client.send(command);\nconsole.log(response);",
				"Python": "import boto3\n\n# Initialize the client\nclient = boto3.client('geo-places', region_name='us-east-1')  # Replace with your region\n\n# Create the reverse geocode request\nparams = {\n    'QueryPosition': [{{queryPosition}}],  # [longitude, latitude]\n    'Key': 'your-api-key',\n    'MaxResults': {{maxResults}},\n    'Language': '{{language}}',\n    'PoliticalView': '{{politicalView}}'\n}\n\n# Make the request\nresponse = client.reverse_geocode(**params)\nprint(response)",
				"Ruby": "require 'aws-sdk-geoplaces'\n\n# Initialize the client\nclient = Aws::GeoPlaces::Client.new(region: 'us-east-1')  # Replace with your region\n\n# Create the reverse geocode request\nparams = {\n  query_position: [{{queryPosition}}],  # [longitude, latitude]\n  max_results: {{maxResults}},\n  key: 'your-api-key',\n  language: '{{language}}',\n  political_view: '{{politicalView}}'\n}\n\n# Make the request\nresponse = client.reverse_geocode(params)\nputs response",
				"paramPlaceholders": {
					"queryPosition": "0, 0",
					"maxResults": "1",
					"language": "en",
					"politicalView": "US"
				}
			}
		},
		{
			"id": "geocode",
			"type": "geocode",
			"tags": ["Places", "Geocode"],
			"submitButtonText": "Geocode",
			"imageSource": "images/Geocode.png",
			"title": "Geocode API Playground",
			"missingFieldsMessage": "Enter an address to geocode",
			"description": "The Geocoding API transforms addresses or place names into geographic coordinates with detailed location information. When building a query, you have two main approaches: use the [[Query]] parameter for simple free-form text input like \"123 Main St, Boston, MA\", or use [[QueryComponents]] for precise structured queries where address elements (street, city, country) are specified separately. The API accepts several optional parameters to refine results: [[BiasPosition]] lets you provide coordinates to prioritize results near a specific location, [[Filter]] allows you to restrict results to certain countries or place types, [[Language]] determines the response language, and [[AdditionalFeatures]] allows you to restrict results to certain countries or place types, can request extra data such as time zones. The API returns a JSON response containing coordinates, formatted address components, and any additional requested information. Query customization helps ensure accurate results — for example, combining [[BiasPosition]] with [[Filter]] can help find the correct \"Main Street\" in a specific city rather than returning matches from around the world.",
			"shouldRenderMap": false,
			"requestParams": [],
			"buildSampleButton": {
				"text": "Build a sample Geocoding solution",
				"link": "https://docs.aws.amazon.com/location/latest/developerguide/geocoding.html"
			},
			"relatedResources": [
				{
					"text": "Geocode API documentation",
					"link": "https://docs.aws.amazon.com/location/latest/APIReference/API_geoplaces_Geocode.html"
				},
				{
					"text": "Geocode Developer Guide",
					"link": "https://docs.aws.amazon.com/location/latest/developerguide/geocode.html"
				},
				{
					"text": "Demo Application",
					"link": "https://demos.location.aws.dev/"
				}
			],
			"locationPopupConfig": {
				"showPlaceId": true,
				"showLatitude": true,
				"showLongitude": true
			},
			"formFields": [
				{
					"type": "address",
					"name": "query",
					"label": "Address",
					"required": true,
					"placeholder": "Enter an address or place name"
				},
				{
					"type": "coordinateInput",
					"name": "biasPosition",
					"label": "BiasPosition",
					"required": false,
					"placeholder": "Enter latitude, longitude (e.g., 40.7128, -74.0060)"
				},
				{
					"type": "multiSelect",
					"name": "additionalFeatures",
					"label": "Additional Features",
					"required": false,
					"maxSelected": 2,
					"options": [
						{
							"label": "TimeZone",
							"value": "TimeZone"
						},
						{
							"label": "Access",
							"value": "Access"
						},
						{
							"label": "SecondaryAddresses",
							"value": "SecondaryAddresses"
						},
						{
							"label": "Intersections",
							"value": "Intersections"
						}
					]
				},
				{
					"type": "multiSelect",
					"name": "includeCountries",
					"label": "Include Countries",
					"required": false,
					"options": [
						{ "label": "Afghanistan", "value": "AF" },
						{ "label": "Albania", "value": "AL" },
						{ "label": "Algeria", "value": "DZ" },
						{ "label": "American Samoa", "value": "AS" },
						{ "label": "Andorra", "value": "AD" },
						{ "label": "Angola", "value": "AO" },
						{ "label": "Anguilla", "value": "AI" },
						{ "label": "Antarctica", "value": "AQ" },
						{ "label": "Antigua and Barbuda", "value": "AG" },
						{ "label": "Argentina", "value": "AR" },
						{ "label": "Armenia", "value": "AM" },
						{ "label": "Aruba", "value": "AW" },
						{ "label": "Australia", "value": "AU" },
						{ "label": "Austria", "value": "AT" },
						{ "label": "Azerbaijan", "value": "AZ" },
						{ "label": "Bahamas", "value": "BS" },
						{ "label": "Bahrain", "value": "BH" },
						{ "label": "Bangladesh", "value": "BD" },
						{ "label": "Barbados", "value": "BB" },
						{ "label": "Belarus", "value": "BY" },
						{ "label": "Belgium", "value": "BE" },
						{ "label": "Belize", "value": "BZ" },
						{ "label": "Benin", "value": "BJ" },
						{ "label": "Bermuda", "value": "BM" },
						{ "label": "Bhutan", "value": "BT" },
						{ "label": "Bolivia", "value": "BO" },
						{ "label": "Bosnia and Herzegovina", "value": "BA" },
						{ "label": "Botswana", "value": "BW" },
						{ "label": "Bouvet Island", "value": "BV" },
						{ "label": "Brazil", "value": "BR" },
						{ "label": "British Indian Ocean Territory", "value": "IO" },
						{ "label": "Brunei Darussalam", "value": "BN" },
						{ "label": "Bulgaria", "value": "BG" },
						{ "label": "Burkina Faso", "value": "BF" },
						{ "label": "Burundi", "value": "BI" },
						{ "label": "Cambodia", "value": "KH" },
						{ "label": "Cameroon", "value": "CM" },
						{ "label": "Canada", "value": "CA" },
						{ "label": "Cape Verde", "value": "CV" },
						{ "label": "Cayman Islands", "value": "KY" },
						{ "label": "Central African Republic", "value": "CF" },
						{ "label": "Chad", "value": "TD" },
						{ "label": "Chile", "value": "CL" },
						{ "label": "China", "value": "CN" },
						{ "label": "Christmas Island", "value": "CX" },
						{ "label": "Cocos (Keeling) Islands", "value": "CC" },
						{ "label": "Colombia", "value": "CO" },
						{ "label": "Comoros", "value": "KM" },
						{ "label": "Congo", "value": "CG" },
						{ "label": "Congo, Democratic Republic", "value": "CD" },
						{ "label": "Cook Islands", "value": "CK" },
						{ "label": "Costa Rica", "value": "CR" },
						{ "label": "Côte d'Ivoire", "value": "CI" },
						{ "label": "Croatia", "value": "HR" },
						{ "label": "Cuba", "value": "CU" },
						{ "label": "Cyprus", "value": "CY" },
						{ "label": "Czech Republic", "value": "CZ" },
						{ "label": "Denmark", "value": "DK" },
						{ "label": "Djibouti", "value": "DJ" },
						{ "label": "Dominica", "value": "DM" },
						{ "label": "Dominican Republic", "value": "DO" },
						{ "label": "Ecuador", "value": "EC" },
						{ "label": "Egypt", "value": "EG" },
						{ "label": "El Salvador", "value": "SV" },
						{ "label": "Equatorial Guinea", "value": "GQ" },
						{ "label": "Eritrea", "value": "ER" },
						{ "label": "Estonia", "value": "EE" },
						{ "label": "Ethiopia", "value": "ET" },
						{ "label": "Falkland Islands", "value": "FK" },
						{ "label": "Faroe Islands", "value": "FO" },
						{ "label": "Fiji", "value": "FJ" },
						{ "label": "Finland", "value": "FI" },
						{ "label": "France", "value": "FR" },
						{ "label": "French Guiana", "value": "GF" },
						{ "label": "French Polynesia", "value": "PF" },
						{ "label": "French Southern Territories", "value": "TF" },
						{ "label": "Gabon", "value": "GA" },
						{ "label": "Gambia", "value": "GM" },
						{ "label": "Georgia", "value": "GE" },
						{ "label": "Germany", "value": "DE" },
						{ "label": "Ghana", "value": "GH" },
						{ "label": "Gibraltar", "value": "GI" },
						{ "label": "Greece", "value": "GR" },
						{ "label": "Greenland", "value": "GL" },
						{ "label": "Grenada", "value": "GD" },
						{ "label": "Guadeloupe", "value": "GP" },
						{ "label": "Guam", "value": "GU" },
						{ "label": "Guatemala", "value": "GT" },
						{ "label": "Guernsey", "value": "GG" },
						{ "label": "Guinea", "value": "GN" },
						{ "label": "Guinea-Bissau", "value": "GW" },
						{ "label": "Guyana", "value": "GY" },
						{ "label": "Haiti", "value": "HT" },
						{ "label": "Heard and McDonald Islands", "value": "HM" },
						{ "label": "Holy See (Vatican)", "value": "VA" },
						{ "label": "Honduras", "value": "HN" },
						{ "label": "Hong Kong", "value": "HK" },
						{ "label": "Hungary", "value": "HU" },
						{ "label": "Iceland", "value": "IS" },
						{ "label": "India", "value": "IN" },
						{ "label": "Indonesia", "value": "ID" },
						{ "label": "Iran", "value": "IR" },
						{ "label": "Iraq", "value": "IQ" },
						{ "label": "Ireland", "value": "IE" },
						{ "label": "Isle of Man", "value": "IM" },
						{ "label": "Israel", "value": "IL" },
						{ "label": "Italy", "value": "IT" },
						{ "label": "Jamaica", "value": "JM" },
						{ "label": "Japan", "value": "JP" },
						{ "label": "Jersey", "value": "JE" },
						{ "label": "Jordan", "value": "JO" },
						{ "label": "Kazakhstan", "value": "KZ" },
						{ "label": "Kenya", "value": "KE" },
						{ "label": "Kiribati", "value": "KI" },
						{ "label": "Korea, North", "value": "KP" },
						{ "label": "Korea, South", "value": "KR" },
						{ "label": "Kuwait", "value": "KW" },
						{ "label": "Kyrgyzstan", "value": "KG" },
						{ "label": "Laos", "value": "LA" },
						{ "label": "Latvia", "value": "LV" },
						{ "label": "Lebanon", "value": "LB" },
						{ "label": "Lesotho", "value": "LS" },
						{ "label": "Liberia", "value": "LR" },
						{ "label": "Libya", "value": "LY" },
						{ "label": "Liechtenstein", "value": "LI" },
						{ "label": "Lithuania", "value": "LT" },
						{ "label": "Luxembourg", "value": "LU" },
						{ "label": "Macao", "value": "MO" },
						{ "label": "Macedonia", "value": "MK" },
						{ "label": "Madagascar", "value": "MG" },
						{ "label": "Malawi", "value": "MW" },
						{ "label": "Malaysia", "value": "MY" },
						{ "label": "Maldives", "value": "MV" },
						{ "label": "Mali", "value": "ML" },
						{ "label": "Malta", "value": "MT" },
						{ "label": "Marshall Islands", "value": "MH" },
						{ "label": "Martinique", "value": "MQ" },
						{ "label": "Mauritania", "value": "MR" },
						{ "label": "Mauritius", "value": "MU" },
						{ "label": "Mayotte", "value": "YT" },
						{ "label": "Mexico", "value": "MX" },
						{ "label": "Micronesia", "value": "FM" },
						{ "label": "Moldova", "value": "MD" },
						{ "label": "Monaco", "value": "MC" },
						{ "label": "Mongolia", "value": "MN" },
						{ "label": "Montenegro", "value": "ME" },
						{ "label": "Montserrat", "value": "MS" },
						{ "label": "Morocco", "value": "MA" },
						{ "label": "Mozambique", "value": "MZ" },
						{ "label": "Myanmar", "value": "MM" },
						{ "label": "Namibia", "value": "NA" },
						{ "label": "Nauru", "value": "NR" },
						{ "label": "Nepal", "value": "NP" },
						{ "label": "Netherlands", "value": "NL" },
						{ "label": "Netherlands Antilles", "value": "AN" },
						{ "label": "New Caledonia", "value": "NC" },
						{ "label": "New Zealand", "value": "NZ" },
						{ "label": "Nicaragua", "value": "NI" },
						{ "label": "Niger", "value": "NE" },
						{ "label": "Nigeria", "value": "NG" },
						{ "label": "Niue", "value": "NU" },
						{ "label": "Norfolk Island", "value": "NF" },
						{ "label": "Northern Mariana Islands", "value": "MP" },
						{ "label": "Norway", "value": "NO" },
						{ "label": "Oman", "value": "OM" },
						{ "label": "Pakistan", "value": "PK" },
						{ "label": "Palau", "value": "PW" },
						{ "label": "Palestine", "value": "PS" },
						{ "label": "Panama", "value": "PA" },
						{ "label": "Papua New Guinea", "value": "PG" },
						{ "label": "Paraguay", "value": "PY" },
						{ "label": "Peru", "value": "PE" },
						{ "label": "Philippines", "value": "PH" },
						{ "label": "Pitcairn", "value": "PN" },
						{ "label": "Poland", "value": "PL" },
						{ "label": "Portugal", "value": "PT" },
						{ "label": "Puerto Rico", "value": "PR" },
						{ "label": "Qatar", "value": "QA" },
						{ "label": "Réunion", "value": "RE" },
						{ "label": "Romania", "value": "RO" },
						{ "label": "Russian Federation", "value": "RU" },
						{ "label": "Rwanda", "value": "RW" },
						{ "label": "Saint Barthélemy", "value": "BL" },
						{ "label": "Saint Helena", "value": "SH" },
						{ "label": "Saint Kitts and Nevis", "value": "KN" },
						{ "label": "Saint Lucia", "value": "LC" },
						{ "label": "Saint Martin", "value": "MF" },
						{ "label": "Saint Pierre and Miquelon", "value": "PM" },
						{ "label": "Saint Vincent and Grenadines", "value": "VC" },
						{ "label": "Samoa", "value": "WS" },
						{ "label": "San Marino", "value": "SM" },
						{ "label": "Sao Tome and Principe", "value": "ST" },
						{ "label": "Saudi Arabia", "value": "SA" },
						{ "label": "Senegal", "value": "SN" },
						{ "label": "Serbia", "value": "RS" },
						{ "label": "Seychelles", "value": "SC" },
						{ "label": "Sierra Leone", "value": "SL" },
						{ "label": "Singapore", "value": "SG" },
						{ "label": "Slovakia", "value": "SK" },
						{ "label": "Slovenia", "value": "SI" },
						{ "label": "Solomon Islands", "value": "SB" },
						{ "label": "Somalia", "value": "SO" },
						{ "label": "South Africa", "value": "ZA" },
						{ "label": "South Georgia", "value": "GS" },
						{ "label": "South Sudan", "value": "SS" },
						{ "label": "Spain", "value": "ES" },
						{ "label": "Sri Lanka", "value": "LK" },
						{ "label": "Sudan", "value": "SD" },
						{ "label": "Suriname", "value": "SR" },
						{ "label": "Svalbard and Jan Mayen", "value": "SJ" },
						{ "label": "Swaziland", "value": "SZ" },
						{ "label": "Sweden", "value": "SE" },
						{ "label": "Switzerland", "value": "CH" },
						{ "label": "Syrian Arab Republic", "value": "SY" },
						{ "label": "Taiwan", "value": "TW" },
						{ "label": "Tajikistan", "value": "TJ" },
						{ "label": "Tanzania", "value": "TZ" },
						{ "label": "Thailand", "value": "TH" },
						{ "label": "Timor-Leste", "value": "TL" },
						{ "label": "Togo", "value": "TG" },
						{ "label": "Tokelau", "value": "TK" },
						{ "label": "Tonga", "value": "TO" },
						{ "label": "Trinidad and Tobago", "value": "TT" },
						{ "label": "Tunisia", "value": "TN" },
						{ "label": "Turkey", "value": "TR" },
						{ "label": "Turkmenistan", "value": "TM" },
						{ "label": "Turks and Caicos Islands", "value": "TC" },
						{ "label": "Tuvalu", "value": "TV" },
						{ "label": "Uganda", "value": "UG" },
						{ "label": "Ukraine", "value": "UA" },
						{ "label": "United Arab Emirates", "value": "AE" },
						{ "label": "United Kingdom", "value": "GB" },
						{ "label": "United States", "value": "US" },
						{ "label": "United States Minor Outlying Islands", "value": "UM" },
						{ "label": "Uruguay", "value": "UY" },
						{ "label": "Uzbekistan", "value": "UZ" },
						{ "label": "Vanuatu", "value": "VU" },
						{ "label": "Venezuela", "value": "VE" },
						{ "label": "Vietnam", "value": "VN" },
						{ "label": "Virgin Islands, British", "value": "VG" },
						{ "label": "Virgin Islands, U.S.", "value": "VI" },
						{ "label": "Wallis and Futuna", "value": "WF" },
						{ "label": "Western Sahara", "value": "EH" },
						{ "label": "Yemen", "value": "YE" },
						{ "label": "Zambia", "value": "ZM" },
						{ "label": "Zimbabwe", "value": "ZW" }
					]
				},
				{
					"type": "multiSelect",
					"name": "includePlaceTypes",
					"label": "Include Place Types",
					"required": false,
					"options": [
						{
							"label": "Locality",
							"value": "Locality"
						},
						{
							"label": "PostalCode",
							"value": "PostalCode"
						},
						{
							"label": "Intersection",
							"value": "Intersection"
						},

						{
							"label": "Street",
							"value": "Street"
						},
						{
							"label": "PointAddress",
							"value": "PointAddress"
						},
						{
							"label": "InterpolatedAddress",
							"value": "InterpolatedAddress"
						}
					]
				},
				{
					"type": "radio",
					"name": "intendedUse",
					"label": "Intended use",
					"required": false,
					"defaultValue": "SingleUse",
					"disabled": true,
					"options": [
						{
							"label": "Single use",
							"value": "SingleUse"
						},
						{
							"label": "Storage",
							"value": "Storage"
						}
					]
				},
				{
					"type": "text",
					"name": "key",
					"label": "Key",
					"required": false,
					"placeholder": "Enter your API key",
					"inputType": "password",
					"hiddenFromUI": true
				},
				{
					"type": "dropdown",
					"name": "language",
					"label": "Language",
					"required": false,
					"options": [
						{ "value": "en", "label": "English" },
						{ "value": "ar", "label": "العربية" },
						{ "value": "as", "label": "অসমীয়া" },
						{ "value": "az", "label": "Azərbaycan dili" },
						{ "value": "be", "label": "беларуская" },
						{ "value": "bg", "label": "български" },
						{ "value": "bn", "label": "বাংলা" },
						{ "value": "bs", "label": "Bosanski" },
						{ "value": "ca", "label": "Català" },
						{ "value": "cs", "label": "Čeština" },
						{ "value": "cy", "label": "Cymraeg" },
						{ "value": "da", "label": "Dansk" },
						{ "value": "de", "label": "Deutsch" },
						{ "value": "el", "label": "Ελληνικά" },
						{ "value": "es", "label": "Español" },
						{ "value": "et", "label": "Eesti" },
						{ "value": "eu", "label": "Euskara" },
						{ "value": "fi", "label": "Suomi" },
						{ "value": "fo", "label": "Føroyskt" },
						{ "value": "fr", "label": "Français" },
						{ "value": "ga", "label": "Gaeilge" },
						{ "value": "gl", "label": "Galego" },
						{ "value": "gn", "label": "Avañe'ẽ" },
						{ "value": "gu", "label": "ગુજરાતી" },
						{ "value": "he", "label": "עברית" },
						{ "value": "hi", "label": "हिन्दी" },
						{ "value": "hr", "label": "Hrvatski" },
						{ "value": "hu", "label": "Magyar" },
						{ "value": "hy", "label": "Հայերեն" },
						{ "value": "id", "label": "Bahasa Indonesia" },
						{ "value": "is", "label": "Íslenska" },
						{ "value": "it", "label": "Italiano" },
						{ "value": "ja", "label": "日本語" },
						{ "value": "ka", "label": "ქართული" },
						{ "value": "kk", "label": "Қазақша" },
						{ "value": "km", "label": "ភាសាខ្មែរ" },
						{ "value": "kn", "label": "ಕನ್ನಡ" },
						{ "value": "ko", "label": "한국어" },
						{ "value": "ky", "label": "Кыргызча" },
						{ "value": "lt", "label": "Lietuvių" },
						{ "value": "lv", "label": "Latviešu" },
						{ "value": "mk", "label": "Македонски" },
						{ "value": "ml", "label": "മലയാളം" },
						{ "value": "mr", "label": "मराठी" },
						{ "value": "ms", "label": "Bahasa Melayu" },
						{ "value": "mt", "label": "Malti" },
						{ "value": "my", "label": "မြန်မာ" },
						{ "value": "nl", "label": "Nederlands" },
						{ "value": "no", "label": "Norsk" },
						{ "value": "or", "label": "ଓଡ଼ିଆ" },
						{ "value": "pa", "label": "ਪੰਜਾਬੀ" },
						{ "value": "pl", "label": "Polski" },
						{ "value": "pt", "label": "Português" },
						{ "value": "ro", "label": "Română" },
						{ "value": "ru", "label": "Русский" },
						{ "value": "sk", "label": "Slovenčina" },
						{ "value": "sl", "label": "Slovenščina" },
						{ "value": "sq", "label": "Shqip" },
						{ "value": "sr", "label": "Српски" },
						{ "value": "sv", "label": "Svenska" },
						{ "value": "ta", "label": "தமிழ்" },
						{ "value": "te", "label": "తెలుగు" },
						{ "value": "th", "label": "ไทย" },
						{ "value": "tr", "label": "Türkçe" },
						{ "value": "uk", "label": "Українська" },
						{ "value": "uz", "label": "Oʻzbekcha" },
						{ "value": "vi", "label": "Tiếng Việt" },
						{ "value": "zh", "label": "中文 (简体)" },
						{ "value": "zh-Hant", "label": "中文 (繁體)" }
					]
				},
				{
					"type": "dropdown",
					"name": "politicalView",
					"label": "Political View",
					"required": false,
					"options": [
						{
							"label": "No political value",
							"value": ""
						},

						{
							"value": "AR",
							"label": "Argentina",
							"desc": "argentina_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "EG",
							"label": "Egypt",
							"desc": "egypt_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "IN",
							"label": "India",
							"desc": "india_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "KE",
							"label": "Kenya",
							"desc": "kenya_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "MA",
							"label": "Morocco",
							"desc": "morocco_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "RU",
							"label": "Russia",
							"desc": "russia_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "SD",
							"label": "Sudan",
							"desc": "sudan_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "RS",
							"label": "Serbia",
							"desc": "serbia_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "SR",
							"label": "Suriname",
							"desc": "suriname_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "SY",
							"label": "Syria",
							"desc": "syria_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "TR",
							"label": "Turkey",
							"desc": "turkey_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "TZ",
							"label": "Tanzania",
							"desc": "tanzania_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "UY",
							"label": "Uruguay",
							"desc": "uruguay_political_view_desc.text",
							"isSupportedByPlaces": true
						},
						{
							"value": "VN",
							"label": "Vietnam",
							"desc": "vietnam_political_view_desc.text",
							"isSupportedByPlaces": true
						}
					]
				},
				{
					"type": "sliderWithInput",
					"name": "maxResults",
					"label": "Max Results",
					"required": false,
					"min": 1,
					"max": 100,
					"step": 1,
					"defaultValue": 1,
					"disabled": true
				},
				{
					"type": "text",
					"name": "addressNumber",
					"label": "Address Number",
					"required": false,
					"placeholder": "Enter address number"
				},
				{
					"type": "text",
					"name": "country",
					"label": "Country",
					"required": false,
					"placeholder": "Enter country"
				},
				{
					"type": "text",
					"name": "district",
					"label": "District",
					"required": false,
					"placeholder": "Enter district"
				},
				{
					"type": "text",
					"name": "locality",
					"label": "Locality",
					"required": false,
					"placeholder": "Enter locality"
				},
				{
					"type": "text",
					"name": "postalCode",
					"label": "Postal Code",
					"required": false,
					"placeholder": "Enter postal code"
				},
				{
					"type": "text",
					"name": "region",
					"label": "Region",
					"required": false,
					"placeholder": "Enter region"
				},
				{
					"type": "text",
					"name": "street",
					"label": "Street",
					"required": false,
					"placeholder": "Enter street"
				},
				{
					"type": "text",
					"name": "subRegion",
					"label": "Sub Region",
					"required": false,
					"placeholder": "Enter sub region"
				}
			],
			"formContent": {
				"type": "list",
				"items": [
					{
						"text": "Enter an address and click 'Geocode"
					},
					{
						"text": "Results will be displayed and shown on the map"
					}
				]
			},
			"apiHandler": {
				"apiMethod": "getPlaceByAddress",
				"paramMapping": {
					"query": "Query",
					"biasPosition": "BiasPosition",
					"additionalFeatures": "AdditionalFeatures",
					"includeCountries": "Filter.IncludeCountries",
					"includePlaceTypes": "Filter.IncludePlaceTypes",
					"intendedUse": "IntendedUse",
					"key": "Key",
					"language": "Language",
					"maxResults": "MaxResults",
					"politicalView": "PoliticalView",
					"addressNumber": "QueryComponents.AddressNumber",
					"country": "QueryComponents.Country",
					"district": "QueryComponents.District",
					"locality": "QueryComponents.Locality",
					"postalCode": "QueryComponents.PostalCode",
					"region": "QueryComponents.Region",
					"street": "QueryComponents.Street",
					"subRegion": "QueryComponents.SubRegion"
				},
				"validationRules": [
					{
						"field": "query",
						"rule": "required",
						"message": "Address query is required"
					}
				]
			},
			"codeSnippets": {
				"JavaScript": "import { GeoPlacesClient, SearchTextCommand } from \"@aws-sdk/client-geo-places\";\n\n// Initialize the client\nconst client = new GeoPlacesClient({\n  region: \"us-east-1\" // Replace with your region\n});\n\n// Create the geocode request\nconst params = {\n  QueryText: \"{{query}}\",\n  BiasPosition: [{{biasPosition}}],\n  MaxResults: {{maxResults}},\n  Language: \"{{language}}\",\n  PoliticalView: \"{{politicalView}}\",\n  Filter: {\n    IncludeCountries: [{{includeCountries}}],\n    IncludePlaceTypes: [{{includePlaceTypes}}]\n  },\n  IntendedUse: \"{{intendedUse}}\",\n  Key: \"{{key}}\",\n  QueryComponents: {\n    AddressNumber: \"{{addressNumber}}\",\n    Country: \"{{country}}\",\n    District: \"{{district}}\",\n    Locality: \"{{locality}}\",\n    PostalCode: \"{{postalCode}}\",\n    Region: \"{{region}}\",\n    Street: \"{{street}}\",\n    SubRegion: \"{{subRegion}}\"\n  }\n};\n\n// Make the request\nconst command = new SearchTextCommand(params);\nconst response = await client.send(command);\nconsole.log(response);",
				"Python": "import boto3\n\n# Initialize the client\nclient = boto3.client('geo-places', region_name='us-east-1')  # Replace with your region\n\n# Create the geocode request\nparams = {\n    'QueryText': '{{query}}',\n    'BiasPosition': [{{biasPosition}}],\n    'MaxResults': {{maxResults}},\n    'Language': '{{language}}',\n    'PoliticalView': '{{politicalView}}',\n    'Filter': {\n        'IncludeCountries': [{{includeCountries}}],\n        'IncludePlaceTypes': [{{includePlaceTypes}}]\n    },\n    'IntendedUse': '{{intendedUse}}',\n    'Key': '{{key}}',\n    'QueryComponents': {\n        'AddressNumber': '{{addressNumber}}',\n        'Country': '{{country}}',\n        'District': '{{district}}',\n        'Locality': '{{locality}}',\n        'PostalCode': '{{postalCode}}',\n        'Region': '{{region}}',\n        'Street': '{{street}}',\n        'SubRegion': '{{subRegion}}'\n    }\n}\n\n# Make the request\nresponse = client.search_text(**params)\nprint(response)",
				"Ruby": "require 'aws-sdk-geoplaces'\n\n# Initialize the client\nclient = Aws::GeoPlaces::Client.new(region: 'us-east-1')  # Replace with your region\n\n# Create the geocode request\nparams = {\n  query_text: '{{query}}',\n  bias_position: [{{biasPosition}}],\n  max_results: {{maxResults}},\n  language: '{{language}}',\n  political_view: '{{politicalView}}',\n  filter: {\n    include_countries: [{{includeCountries}}],\n    include_place_types: [{{includePlaceTypes}}]\n  },\n  intended_use: '{{intendedUse}}',\n  key: '{{key}}',\n  query_components: {\n    address_number: '{{addressNumber}}',\n    country: '{{country}}',\n    district: '{{district}}',\n    locality: '{{locality}}',\n    postal_code: '{{postalCode}}',\n    region: '{{region}}',\n    street: '{{street}}',\n    sub_region: '{{subRegion}}'\n  }\n}\n\n# Make the request\nresponse = client.search_text(params)\nputs response",
				"paramPlaceholders": {
					"query": "123 Main St, New York, NY",
					"biasPosition": "0, 0",
					"maxResults": "1",
					"language": "en",
					"politicalView": "US",
					"includeCountries": "US",
					"includePlaceTypes": "PointAddress",
					"intendedUse": "SingleUse",
					"key": "your-api-key",
					"addressNumber": "123",
					"country": "US",
					"district": "Manhattan",
					"locality": "New York",
					"postalCode": "10001",
					"region": "NY",
					"street": "Main St",
					"subRegion": "New York County"
				}
			}
		}
	]
}
