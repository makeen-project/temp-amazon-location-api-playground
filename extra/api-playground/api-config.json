{
	"apis": {
		"reverseGeocode": [
			{
				"type": "reverseGeocode",
				"submitButtonText": "ReverseGeocode",
				"id": "reverse-geocode",
				"imageSource": "images/Map1.png",
				"title": "ReverseGeocode API Playground",
				"description": "The Reverse Geocode API converts latitude/Longitude into human-readable addresses. Use [[QueryPosition]] with latitude/longitude. Optional parameters include [[BiasPosition]], [[Filter]], and [[MaxResults]].The response contains [[ResultItems]] with [[Address]], [[Position]], and Optional [[TimeZone]] data. Use [[AdditionalFeatures]] to request extra information like time zones.",
				"shouldRenderMap": true,
				"missingFieldsMessage": "Click the map to reverse geocode",
				"requestParams": [],
				"buildSampleButton": {
					"text": "Build a sample ReverseGeocode Solution",
					"link": "https://docs.aws.amazon.com/location/latest/developerguide/reverse-geocoding.html"
				},
				"relatedResources": [
					{
						"text": "ReverseGeocode API documentation",
						"link": "https://docs.aws.amazon.com/location/latest/developerguide/reverse-geocode.html"
					},
					{
						"text": "ReverseGeocode Developer Guide",
						"link": "https://docs.aws.amazon.com/location/latest/APIReference/API_geoplaces_ReverseGeocode.html"
					},
					{
						"text": "Demo Application",
						"link": "https://demos.location.aws.dev/"
					}
				],
				"locationPopupConfig": {
					"showPlaceId": true,
					"showLatitude": true,
					"showLongitude": true
				},
				"formFields": [
					{
						"type": "lngLatInput",
						"name": "queryPosition",
						"label": "Query Position",
						"required": true,
						"placeholder": "Enter longitude and latitude coordinates"
					},
					{
						"type": "multiSelect",
						"name": "additionalFeatures",
						"label": "Additional Features",
						"maxSelected": 2,
						"required": false,
						"options": [
							{
								"label": "Access",
								"value": "Access"
							},
							{
								"label": "TimeZone",
								"value": "TimeZone"
							},
							{
								"label": "Intersections",
								"value": "Intersections"
							}
						]
					},
					{
						"type": "multiSelect",
						"name": "includePlaceTypes",
						"label": "Include Place Types",
						"required": false,
						"options": [
							{
								"label": "InterpolatedAddress",
								"value": "InterpolatedAddress"
							},
							{
								"label": "Intersection",
								"value": "Intersection"
							},
							{
								"label": "Locality",
								"value": "Locality"
							},
							{
								"label": "PointAddress",
								"value": "PointAddress"
							},
							{
								"label": "Street",
								"value": "Street"
							}
						]
					},
					{
						"type": "radio",
						"name": "intendedUse",
						"label": "Intended use",
						"required": false,
						"disabled": true,
						"defaultValue": "SingleUse",
						"options": [
							{
								"label": "Single use",
								"value": "SingleUse"
							},
							{
								"label": "Storage",
								"value": "Storage"
							}
						]
					},
					{
						"type": "text",
						"name": "apiKey",
						"label": "API Key",
						"required": false,
						"placeholder": "Enter your API key",
						"inputType": "password",
						"hiddenFromUI": true
					},
					{
						"type": "dropdown",
						"name": "language",
						"label": "Language",
						"required": false,
						"options": [
							{ "value": "en", "label": "English" },
							{ "value": "ar", "label": "العربية" },
							{ "value": "as", "label": "অসমীয়া" },
							{ "value": "az", "label": "Azərbaycan dili" },
							{ "value": "be", "label": "беларуская" },
							{ "value": "bg", "label": "български" },
							{ "value": "bn", "label": "বাংলা" },
							{ "value": "bs", "label": "Bosanski" },
							{ "value": "ca", "label": "Català" },
							{ "value": "cs", "label": "Čeština" },
							{ "value": "cy", "label": "Cymraeg" },
							{ "value": "da", "label": "Dansk" },
							{ "value": "de", "label": "Deutsch" },
							{ "value": "el", "label": "Ελληνικά" },
							{ "value": "es", "label": "Español" },
							{ "value": "et", "label": "Eesti" },
							{ "value": "eu", "label": "Euskara" },
							{ "value": "fi", "label": "Suomi" },
							{ "value": "fo", "label": "Føroyskt" },
							{ "value": "fr", "label": "Français" },
							{ "value": "ga", "label": "Gaeilge" },
							{ "value": "gl", "label": "Galego" },
							{ "value": "gn", "label": "Avañe'ẽ" },
							{ "value": "gu", "label": "ગુજરાતી" },
							{ "value": "he", "label": "עברית" },
							{ "value": "hi", "label": "हिन्दी" },
							{ "value": "hr", "label": "Hrvatski" },
							{ "value": "hu", "label": "Magyar" },
							{ "value": "hy", "label": "Հայերեն" },
							{ "value": "id", "label": "Bahasa Indonesia" },
							{ "value": "is", "label": "Íslenska" },
							{ "value": "it", "label": "Italiano" },
							{ "value": "ja", "label": "日本語" },
							{ "value": "ka", "label": "ქართული" },
							{ "value": "kk", "label": "Қазақша" },
							{ "value": "km", "label": "ភាសាខ្មែរ" },
							{ "value": "kn", "label": "ಕನ್ನಡ" },
							{ "value": "ko", "label": "한국어" },
							{ "value": "ky", "label": "Кыргызча" },
							{ "value": "lt", "label": "Lietuvių" },
							{ "value": "lv", "label": "Latviešu" },
							{ "value": "mk", "label": "Македонски" },
							{ "value": "ml", "label": "മലയാളം" },
							{ "value": "mr", "label": "मराठी" },
							{ "value": "ms", "label": "Bahasa Melayu" },
							{ "value": "mt", "label": "Malti" },
							{ "value": "my", "label": "မြန်မာ" },
							{ "value": "nl", "label": "Nederlands" },
							{ "value": "no", "label": "Norsk" },
							{ "value": "or", "label": "ଓଡ଼ିଆ" },
							{ "value": "pa", "label": "ਪੰਜਾਬੀ" },
							{ "value": "pl", "label": "Polski" },
							{ "value": "pt", "label": "Português" },
							{ "value": "ro", "label": "Română" },
							{ "value": "ru", "label": "Русский" },
							{ "value": "sk", "label": "Slovenčina" },
							{ "value": "sl", "label": "Slovenščina" },
							{ "value": "sq", "label": "Shqip" },
							{ "value": "sr", "label": "Српски" },
							{ "value": "sv", "label": "Svenska" },
							{ "value": "ta", "label": "தமிழ்" },
							{ "value": "te", "label": "తెలుగు" },
							{ "value": "th", "label": "ไทย" },
							{ "value": "tr", "label": "Türkçe" },
							{ "value": "uk", "label": "Українська" },
							{ "value": "uz", "label": "Oʻzbekcha" },
							{ "value": "vi", "label": "Tiếng Việt" },
							{ "value": "zh", "label": "中文 (简体)" },
							{ "value": "zh-Hant", "label": "中文 (繁體)" }
						]
					},
					{
						"type": "sliderWithInput",
						"name": "maxResults",
						"label": "Max Results",
						"required": false,
						"min": 1,
						"max": 100,
						"step": 1,
						"defaultValue": 1,
						"disabled": true
					},
					{
						"type": "dropdown",
						"name": "politicalView",
						"label": "Political View",
						"required": false,
						"defaultValue": "",
						"options": [
							{
								"label": "No political value",
								"value": ""
							},

							{
								"value": "AR",
								"label": "ARG",
								"desc": "argentina_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "EG",
								"label": "EGY",
								"desc": "egypt_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "IN",
								"label": "IND",
								"desc": "india_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "KE",
								"label": "KEN",
								"desc": "kenya_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "MA",
								"label": "MAR",
								"desc": "morocco_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "RU",
								"label": "RUS",
								"desc": "russia_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "SD",
								"label": "SDN",
								"desc": "sudan_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "RS",
								"label": "SRB",
								"desc": "serbia_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "SR",
								"label": "SUR",
								"desc": "suriname_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "SY",
								"label": "SYR",
								"desc": "syria_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "TR",
								"label": "TUR",
								"desc": "turkey_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "TZ",
								"label": "TZA",
								"desc": "tanzania_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "UY",
								"label": "URY",
								"desc": "uruguay_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "GE",
								"label": "GEO",
								"desc": "georgia_political_view_desc.text",
								"isSupportedByPlaces": false
							},
							{
								"value": "CY",
								"label": "CYP",
								"desc": "cyprus_political_view_desc.text",
								"isSupportedByPlaces": false
							},
							{
								"value": "PS",
								"label": "PSE",
								"desc": "palestine_political_view_desc.text",
								"isSupportedByPlaces": false
							},
							{
								"value": "GR",
								"label": "GRC",
								"desc": "greece_political_view_desc.text",
								"isSupportedByPlaces": false
							}
						]
					},
					{
						"type": "sliderWithInput",
						"name": "queryRadius",
						"label": "Query Radius",
						"disabled": true,
						"min": 1,
						"max": 21000000,
						"step": 1,
						"required": false
					}
				],
				"formContent": {
					"type": "list",
					"items": [
						{
							"text": "Click a point on the map or enter coordinates then select [[Reverse Geocode]]"
						},
						{
							"text": "Results will be displayed and shown on the map"
						}
					]
				},
				"apiHandler": {
					"apiMethod": "getPlaceByCoordinates",
					"paramMapping": {
						"queryPosition": "QueryPosition",
						"additionalFeatures": "AdditionalFeatures",
						"includePlaceTypes": "Filter.IncludePlaceTypes",
						"intendedUse": "IntendedUse",
						"language": "Language",
						"maxResults": "MaxResults",
						"politicalView": "PoliticalView",
						"queryRadius": "QueryRadius"
					},
					"validationRules": [
						{
							"field": "queryPosition",
							"rule": "required",
							"message": "Query Position is required and must contain longitude and latitude"
						}
					]
				},
				"codeSnippets": {
					"JavaScript": "import { GeoPlacesClient, ReverseGeocodeCommand } from \"@aws-sdk/client-geo-places\";\n\n// Initialize the client\nconst client = new GeoPlacesClient({\n  region: \"us-east-1\" // Replace with your region\n});\n\n// Create the reverse geocode request\nconst params = {\n  QueryPosition: [{{queryPosition}}],MaxResults: {{maxResults}},\n  Key: 'your-api-key', \n  Language: \"{{language}}\",\n  PoliticalView: \"{{politicalView}}\"\n};\n\n// Make the request\nconst command = new ReverseGeocodeCommand(params);\nconst response = await client.send(command);\nconsole.log(response);",
					"Python": "import boto3\n\n# Initialize the client\nclient = boto3.client('geo-places', region_name='us-east-1')  # Replace with your region\n\n# Create the reverse geocode request\nparams = {\n    'QueryPosition': [{{queryPosition}}],  # [longitude, latitude]\n    'Key': 'your-api-key',\n    'MaxResults': {{maxResults}},\n    'Language': '{{language}}',\n    'PoliticalView': '{{politicalView}}'\n}\n\n# Make the request\nresponse = client.reverse_geocode(**params)\nprint(response)",
					"Ruby": "require 'aws-sdk-geoplaces'\n\n# Initialize the client\nclient = Aws::GeoPlaces::Client.new(region: 'us-east-1')  # Replace with your region\n\n# Create the reverse geocode request\nparams = {\n  query_position: [{{queryPosition}}],  # [longitude, latitude]\n  max_results: {{maxResults}},\n  key: 'your-api-key',\n  language: '{{language}}',\n  political_view: '{{politicalView}}'\n}\n\n# Make the request\nresponse = client.reverse_geocode(params)\nputs response",
					"paramPlaceholders": {
						"queryPosition": "0, 0",
						"maxResults": "1",
						"language": "en",
						"politicalView": "US"
					}
				}
			}
		],
		"Geocode": [
			{
				"type": "geocode",
				"id": "geocode",
				"submitButtonText": "Geocode",
				"imageSource": "images/Map2.png",
				"title": "Geocode API Playground",
				"missingFieldsMessage": "Enter an address to geocode",
				"description": "The Geocoding API transforms addresses or place names into geographic coordinates with detailed location information. When building a query, you have two main approaches: use the [[Query]] parameter for simple free-form text input like \"123 Main St, Boston, MA\", or use [[QueryComponents]] for precise structured queries where address elements (street, city, country) are specified separately. The API accepts several optional parameters to refine results: [[BiasPosition]] lets you provide coordinates to prioritize results near a specific location, [[Filter]] allows you to restrict results to certain countries or place types, [[Language]] determines the response language, and [[AdditionalFeatures]] allows you to restrict results to certain countries or place types, can request extra data such as time zones. The API returns a JSON response containing coordinates, formatted address components, and any additional requested information. Query customization helps ensure accurate results — for example, combining [[BiasPosition]] with [[Filter]] can help find the correct \"Main Street\" in a specific city rather than returning matches from around the world.",
				"shouldRenderMap": false,
				"requestParams": [],
				"buildSampleButton": {
					"text": "Build a sample Geocoding solution",
					"link": "https://docs.aws.amazon.com/location/latest/developerguide/geocoding.html"
				},
				"relatedResources": [
					{
						"text": "Geocode API documentation",
						"link": "https://docs.aws.amazon.com/location/latest/developerguide/geocode.html"
					},
					{
						"text": "Geocode Developer Guide",
						"link": "https://docs.aws.amazon.com/location/latest/APIReference/API_geoplaces_Geocode.html"
					},
					{
						"text": "Demo Application",
						"link": "https://demos.location.aws.dev/"
					}
				],
				"locationPopupConfig": {
					"showPlaceId": false,
					"showLatitude": true,
					"showLongitude": true
				},
				"formFields": [
					{
						"type": "address",
						"name": "query",
						"label": "Address",
						"required": true,
						"placeholder": "Enter address"
					},
					{
						"type": "lngLatInput",
						"name": "biasPosition",
						"label": "Bias Position",
						"required": false,
						"placeholder": "Enter longitude and latitude coordinates"
					},
					{
						"type": "multiSelect",
						"name": "additionalFeatures",
						"label": "Additional Features",
						"required": false,
						"maxSelected": 2,
						"options": [
							{
								"label": "TimeZone",
								"value": "TimeZone"
							},
							{
								"label": "Access",
								"value": "Access"
							},
							{
								"label": "SecondaryAddresses",
								"value": "SecondaryAddresses"
							},
							{
								"label": "Intersections",
								"value": "Intersections"
							}
						]
					},
					{
						"type": "multiSelect",
						"name": "includeCountries",
						"label": "Include Countries",
						"required": false,
						"options": [
							{
								"label": "US",
								"value": "US"
							},
							{
								"label": "CA",
								"value": "CA"
							},
							{
								"label": "GB",
								"value": "GB"
							},
							{
								"label": "DE",
								"value": "DE"
							},
							{
								"label": "FR",
								"value": "FR"
							},
							{
								"label": "ES",
								"value": "ES"
							},
							{
								"label": "IT",
								"value": "IT"
							},
							{
								"label": "JP",
								"value": "JP"
							},
							{
								"label": "AU",
								"value": "AU"
							},
							{
								"label": "IN",
								"value": "IN"
							}
						]
					},
					{
						"type": "multiSelect",
						"name": "includePlaceTypes",
						"label": "Include Place Types",
						"required": false,
						"options": [
							{
								"label": "InterpolatedAddress",
								"value": "InterpolatedAddress"
							},
							{
								"label": "Intersection",
								"value": "Intersection"
							},
							{
								"label": "Locality",
								"value": "Locality"
							},
							{
								"label": "PointAddress",
								"value": "PointAddress"
							},
							{
								"label": "Street",
								"value": "Street"
							}
						]
					},
					{
						"type": "radio",
						"name": "intendedUse",
						"label": "Intended use",
						"required": false,
						"defaultValue": "SingleUse",
						"disabled": true,
						"options": [
							{
								"label": "Single use",
								"value": "SingleUse"
							},
							{
								"label": "Storage",
								"value": "Storage"
							}
						]
					},
					{
						"type": "text",
						"name": "key",
						"label": "Key",
						"required": false,
						"placeholder": "Enter your API key",
						"inputType": "password",
						"hiddenFromUI": true
					},
					{
						"type": "dropdown",
						"name": "language",
						"label": "Language",
						"required": false,
						"options": [
							{ "value": "en", "label": "English" },
							{ "value": "ar", "label": "العربية" },
							{ "value": "as", "label": "অসমীয়া" },
							{ "value": "az", "label": "Azərbaycan dili" },
							{ "value": "be", "label": "беларуская" },
							{ "value": "bg", "label": "български" },
							{ "value": "bn", "label": "বাংলা" },
							{ "value": "bs", "label": "Bosanski" },
							{ "value": "ca", "label": "Català" },
							{ "value": "cs", "label": "Čeština" },
							{ "value": "cy", "label": "Cymraeg" },
							{ "value": "da", "label": "Dansk" },
							{ "value": "de", "label": "Deutsch" },
							{ "value": "el", "label": "Ελληνικά" },
							{ "value": "es", "label": "Español" },
							{ "value": "et", "label": "Eesti" },
							{ "value": "eu", "label": "Euskara" },
							{ "value": "fi", "label": "Suomi" },
							{ "value": "fo", "label": "Føroyskt" },
							{ "value": "fr", "label": "Français" },
							{ "value": "ga", "label": "Gaeilge" },
							{ "value": "gl", "label": "Galego" },
							{ "value": "gn", "label": "Avañe'ẽ" },
							{ "value": "gu", "label": "ગુજરાતી" },
							{ "value": "he", "label": "עברית" },
							{ "value": "hi", "label": "हिन्दी" },
							{ "value": "hr", "label": "Hrvatski" },
							{ "value": "hu", "label": "Magyar" },
							{ "value": "hy", "label": "Հայերեն" },
							{ "value": "id", "label": "Bahasa Indonesia" },
							{ "value": "is", "label": "Íslenska" },
							{ "value": "it", "label": "Italiano" },
							{ "value": "ja", "label": "日本語" },
							{ "value": "ka", "label": "ქართული" },
							{ "value": "kk", "label": "Қазақша" },
							{ "value": "km", "label": "ភាសាខ្មែរ" },
							{ "value": "kn", "label": "ಕನ್ನಡ" },
							{ "value": "ko", "label": "한국어" },
							{ "value": "ky", "label": "Кыргызча" },
							{ "value": "lt", "label": "Lietuvių" },
							{ "value": "lv", "label": "Latviešu" },
							{ "value": "mk", "label": "Македонски" },
							{ "value": "ml", "label": "മലയാളം" },
							{ "value": "mr", "label": "मराठी" },
							{ "value": "ms", "label": "Bahasa Melayu" },
							{ "value": "mt", "label": "Malti" },
							{ "value": "my", "label": "မြန်မာ" },
							{ "value": "nl", "label": "Nederlands" },
							{ "value": "no", "label": "Norsk" },
							{ "value": "or", "label": "ଓଡ଼ିଆ" },
							{ "value": "pa", "label": "ਪੰਜਾਬੀ" },
							{ "value": "pl", "label": "Polski" },
							{ "value": "pt", "label": "Português" },
							{ "value": "ro", "label": "Română" },
							{ "value": "ru", "label": "Русский" },
							{ "value": "sk", "label": "Slovenčina" },
							{ "value": "sl", "label": "Slovenščina" },
							{ "value": "sq", "label": "Shqip" },
							{ "value": "sr", "label": "Српски" },
							{ "value": "sv", "label": "Svenska" },
							{ "value": "ta", "label": "தமிழ்" },
							{ "value": "te", "label": "తెలుగు" },
							{ "value": "th", "label": "ไทย" },
							{ "value": "tr", "label": "Türkçe" },
							{ "value": "uk", "label": "Українська" },
							{ "value": "uz", "label": "Oʻzbekcha" },
							{ "value": "vi", "label": "Tiếng Việt" },
							{ "value": "zh", "label": "中文 (简体)" },
							{ "value": "zh-Hant", "label": "中文 (繁體)" }
						]
					},
					{
						"type": "dropdown",
						"name": "politicalView",
						"label": "Political View",
						"required": false,
						"options": [
							{
								"label": "No political value",
								"value": ""
							},

							{
								"value": "AR",
								"label": "ARG",
								"desc": "argentina_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "EG",
								"label": "EGY",
								"desc": "egypt_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "IN",
								"label": "IND",
								"desc": "india_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "KE",
								"label": "KEN",
								"desc": "kenya_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "MA",
								"label": "MAR",
								"desc": "morocco_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "RU",
								"label": "RUS",
								"desc": "russia_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "SD",
								"label": "SDN",
								"desc": "sudan_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "RS",
								"label": "SRB",
								"desc": "serbia_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "SR",
								"label": "SUR",
								"desc": "suriname_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "SY",
								"label": "SYR",
								"desc": "syria_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "TR",
								"label": "TUR",
								"desc": "turkey_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "TZ",
								"label": "TZA",
								"desc": "tanzania_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "UY",
								"label": "URY",
								"desc": "uruguay_political_view_desc.text",
								"isSupportedByPlaces": true
							},
							{
								"value": "GE",
								"label": "GEO",
								"desc": "georgia_political_view_desc.text",
								"isSupportedByPlaces": false
							},
							{
								"value": "CY",
								"label": "CYP",
								"desc": "cyprus_political_view_desc.text",
								"isSupportedByPlaces": false
							},
							{
								"value": "PS",
								"label": "PSE",
								"desc": "palestine_political_view_desc.text",
								"isSupportedByPlaces": false
							},
							{
								"value": "GR",
								"label": "GRC",
								"desc": "greece_political_view_desc.text",
								"isSupportedByPlaces": false
							}
						]
					},
					{
						"type": "sliderWithInput",
						"name": "maxResults",
						"label": "Max Results",
						"required": false,
						"min": 1,
						"max": 100,
						"step": 1,
						"defaultValue": 1,
						"disabled": true
					},
					{
						"type": "text",
						"name": "addressNumber",
						"label": "Address Number",
						"required": false,
						"placeholder": "Enter address number"
					},
					{
						"type": "text",
						"name": "country",
						"label": "Country",
						"required": false,
						"placeholder": "Enter country"
					},
					{
						"type": "text",
						"name": "district",
						"label": "District",
						"required": false,
						"placeholder": "Enter district"
					},
					{
						"type": "text",
						"name": "locality",
						"label": "Locality",
						"required": false,
						"placeholder": "Enter locality"
					},
					{
						"type": "text",
						"name": "postalCode",
						"label": "Postal Code",
						"required": false,
						"placeholder": "Enter postal code"
					},
					{
						"type": "text",
						"name": "region",
						"label": "Region",
						"required": false,
						"placeholder": "Enter region"
					},
					{
						"type": "text",
						"name": "street",
						"label": "Street",
						"required": false,
						"placeholder": "Enter street"
					},
					{
						"type": "text",
						"name": "subRegion",
						"label": "Sub Region",
						"required": false,
						"placeholder": "Enter sub region"
					}
				],
				"formContent": {
					"type": "list",
					"items": [
						{
							"text": "Enter an address and click [[Geocode]]"
						},
						{
							"text": "Results will be displayed and shown on the map"
						}
					]
				},
				"apiHandler": {
					"apiMethod": "getPlaceByAddress",
					"paramMapping": {
						"query": "Query",
						"biasPosition": "BiasPosition",
						"additionalFeatures": "AdditionalFeatures",
						"includeCountries": "Filter.IncludeCountries",
						"includePlaceTypes": "Filter.IncludePlaceTypes",
						"intendedUse": "IntendedUse",
						"key": "Key",
						"language": "Language",
						"maxResults": "MaxResults",
						"politicalView": "PoliticalView",
						"addressNumber": "QueryComponents.AddressNumber",
						"country": "QueryComponents.Country",
						"district": "QueryComponents.District",
						"locality": "QueryComponents.Locality",
						"postalCode": "QueryComponents.PostalCode",
						"region": "QueryComponents.Region",
						"street": "QueryComponents.Street",
						"subRegion": "QueryComponents.SubRegion"
					},
					"validationRules": [
						{
							"field": "query",
							"rule": "required",
							"message": "Address query is required"
						}
					]
				},
				"codeSnippets": {
					"JavaScript": "import { GeoPlacesClient, SearchTextCommand } from \"@aws-sdk/client-geo-places\";\n\n// Initialize the client\nconst client = new GeoPlacesClient({\n  region: \"us-east-1\" // Replace with your region\n});\n\n// Create the geocode request\nconst params = {\n  QueryText: \"{{query}}\",\n  BiasPosition: [{{biasPosition}}],\n  MaxResults: {{maxResults}},\n  Language: \"{{language}}\",\n  PoliticalView: \"{{politicalView}}\",\n  Filter: {\n    IncludeCountries: [{{includeCountries}}],\n    IncludePlaceTypes: [{{includePlaceTypes}}]\n  },\n  IntendedUse: \"{{intendedUse}}\",\n  Key: \"{{key}}\",\n  QueryComponents: {\n    AddressNumber: \"{{addressNumber}}\",\n    Country: \"{{country}}\",\n    District: \"{{district}}\",\n    Locality: \"{{locality}}\",\n    PostalCode: \"{{postalCode}}\",\n    Region: \"{{region}}\",\n    Street: \"{{street}}\",\n    SubRegion: \"{{subRegion}}\"\n  }\n};\n\n// Make the request\nconst command = new SearchTextCommand(params);\nconst response = await client.send(command);\nconsole.log(response);",
					"Python": "import boto3\n\n# Initialize the client\nclient = boto3.client('geo-places', region_name='us-east-1')  # Replace with your region\n\n# Create the geocode request\nparams = {\n    'QueryText': '{{query}}',\n    'BiasPosition': [{{biasPosition}}],\n    'MaxResults': {{maxResults}},\n    'Language': '{{language}}',\n    'PoliticalView': '{{politicalView}}',\n    'Filter': {\n        'IncludeCountries': [{{includeCountries}}],\n        'IncludePlaceTypes': [{{includePlaceTypes}}]\n    },\n    'IntendedUse': '{{intendedUse}}',\n    'Key': '{{key}}',\n    'QueryComponents': {\n        'AddressNumber': '{{addressNumber}}',\n        'Country': '{{country}}',\n        'District': '{{district}}',\n        'Locality': '{{locality}}',\n        'PostalCode': '{{postalCode}}',\n        'Region': '{{region}}',\n        'Street': '{{street}}',\n        'SubRegion': '{{subRegion}}'\n    }\n}\n\n# Make the request\nresponse = client.search_text(**params)\nprint(response)",
					"Ruby": "require 'aws-sdk-geoplaces'\n\n# Initialize the client\nclient = Aws::GeoPlaces::Client.new(region: 'us-east-1')  # Replace with your region\n\n# Create the geocode request\nparams = {\n  query_text: '{{query}}',\n  bias_position: [{{biasPosition}}],\n  max_results: {{maxResults}},\n  language: '{{language}}',\n  political_view: '{{politicalView}}',\n  filter: {\n    include_countries: [{{includeCountries}}],\n    include_place_types: [{{includePlaceTypes}}]\n  },\n  intended_use: '{{intendedUse}}',\n  key: '{{key}}',\n  query_components: {\n    address_number: '{{addressNumber}}',\n    country: '{{country}}',\n    district: '{{district}}',\n    locality: '{{locality}}',\n    postal_code: '{{postalCode}}',\n    region: '{{region}}',\n    street: '{{street}}',\n    sub_region: '{{subRegion}}'\n  }\n}\n\n# Make the request\nresponse = client.search_text(params)\nputs response",
					"paramPlaceholders": {
						"query": "123 Main St, New York, NY",
						"biasPosition": "0, 0",
						"maxResults": "1",
						"language": "en",
						"politicalView": "US",
						"includeCountries": "US",
						"includePlaceTypes": "PointAddress",
						"intendedUse": "SingleUse",
						"key": "your-api-key",
						"addressNumber": "123",
						"country": "US",
						"district": "Manhattan",
						"locality": "New York",
						"postalCode": "10001",
						"region": "NY",
						"street": "Main St",
						"subRegion": "New York County"
					}
				}
			}
		]
	}
}
